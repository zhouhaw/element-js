"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.refreshMeta = exports.assetsDetail = exports.exploreAssetsList = void 0;
var graphql_request_1 = require("graphql-request");
exports.exploreAssetsList = graphql_request_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  query exploreAssetsList(\n    $before: String\n    $after: String\n    $first: Int\n    $last: Int\n    $querystring: String\n    $categorySlugs: [String!]\n    $collectionSlugs: [String!]\n    $sortBy: SearchSortBy\n    $sortAscending: Boolean\n    $toggles: [SearchToggle!]\n    $ownerAddress: Address\n    $creatorAddress: Address\n    $blockChains: [BlockChainInput!]\n    $paymentTokens: [String!]\n    $priceFilter: PriceFilterInput\n  ) {\n    search(\n      before: $before\n      after: $after\n      first: $first\n      last: $last\n      search: {\n        querystring: $querystring\n        categorySlugs: $categorySlugs\n        collectionSlugs: $collectionSlugs\n        sortBy: $sortBy\n        sortAscending: $sortAscending\n        toggles: $toggles\n        ownerAddress: $ownerAddress\n        creatorAddress: $creatorAddress\n        blockChains: $blockChains\n        paymentTokens: $paymentTokens\n        priceFilter: $priceFilter\n      }\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          asset {\n            chain\n            chainId\n            contractAddress\n            tokenId\n            name\n            imagePreviewUrl\n            imageThumbnailUrl\n            animationUrl\n            tradeSummary {\n              lastSale {\n                lastSalePrice\n                lastSaleToken\n                lastSaleQuantity\n                lastSaleTokenContract {\n                  id\n                  name\n                  address\n                  icon\n                  accuracy\n                }\n              }\n              bestBid {\n                bestBidToken\n                bestBidPrice\n                bestBidOrderQuantity\n                bestBidTokenContract {\n                  id\n                  name\n                  address\n                  icon\n                  accuracy\n                }\n              }\n              bestAsk {\n                bestAskToken\n                bestAskPrice\n                bestAskExpirationDate\n                bestAskOrderType\n                bestAskOrderQuantity\n                bestAskTokenContract {\n                  id\n                  name\n                  address\n                  icon\n                  accuracy\n                }\n              }\n            }\n            collection {\n              name\n              isVerified\n            }\n            isFavorite\n            favoriteQuantity\n          }\n        }\n      }\n      pageInfo {\n        hasPreviousPage\n        hasNextPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"], ["\n  query exploreAssetsList(\n    $before: String\n    $after: String\n    $first: Int\n    $last: Int\n    $querystring: String\n    $categorySlugs: [String!]\n    $collectionSlugs: [String!]\n    $sortBy: SearchSortBy\n    $sortAscending: Boolean\n    $toggles: [SearchToggle!]\n    $ownerAddress: Address\n    $creatorAddress: Address\n    $blockChains: [BlockChainInput!]\n    $paymentTokens: [String!]\n    $priceFilter: PriceFilterInput\n  ) {\n    search(\n      before: $before\n      after: $after\n      first: $first\n      last: $last\n      search: {\n        querystring: $querystring\n        categorySlugs: $categorySlugs\n        collectionSlugs: $collectionSlugs\n        sortBy: $sortBy\n        sortAscending: $sortAscending\n        toggles: $toggles\n        ownerAddress: $ownerAddress\n        creatorAddress: $creatorAddress\n        blockChains: $blockChains\n        paymentTokens: $paymentTokens\n        priceFilter: $priceFilter\n      }\n    ) {\n      totalCount\n      edges {\n        cursor\n        node {\n          asset {\n            chain\n            chainId\n            contractAddress\n            tokenId\n            name\n            imagePreviewUrl\n            imageThumbnailUrl\n            animationUrl\n            tradeSummary {\n              lastSale {\n                lastSalePrice\n                lastSaleToken\n                lastSaleQuantity\n                lastSaleTokenContract {\n                  id\n                  name\n                  address\n                  icon\n                  accuracy\n                }\n              }\n              bestBid {\n                bestBidToken\n                bestBidPrice\n                bestBidOrderQuantity\n                bestBidTokenContract {\n                  id\n                  name\n                  address\n                  icon\n                  accuracy\n                }\n              }\n              bestAsk {\n                bestAskToken\n                bestAskPrice\n                bestAskExpirationDate\n                bestAskOrderType\n                bestAskOrderQuantity\n                bestAskTokenContract {\n                  id\n                  name\n                  address\n                  icon\n                  accuracy\n                }\n              }\n            }\n            collection {\n              name\n              isVerified\n            }\n            isFavorite\n            favoriteQuantity\n          }\n        }\n      }\n      pageInfo {\n        hasPreviousPage\n        hasNextPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"])));
exports.assetsDetail = graphql_request_1.gql(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  query assetsDetail($blockChain: BlockChainInput!, $contractAddress: Address!, $tokenId: String!) {\n    asset(identity: { blockChain: $blockChain, contractAddress: $contractAddress, tokenId: $tokenId }) {\n      id\n      chain\n      chainId\n      contractAddress\n      tokenId\n      tokenType\n      creatorAddress\n      collectionId\n      name\n      description\n      imageAttrs\n      animationAttrs\n      imageUrl\n      imagePreviewUrl\n      imageThumbnailUrl\n      animationUrl\n      externalUrls\n      unlockContentEnable\n      ownedQuantity\n      ownershipCount\n      quantity\n      properties {\n        key\n        value\n        traitCount\n        traitTotal\n        traitSupply\n      }\n      levels {\n        key\n        value\n        max\n      }\n      stats {\n        key\n        value\n        max\n      }\n      supply\n      tradeSummary {\n        lastSale {\n          lastSaleDate\n          lastSalePriceBase\n          lastSalePriceUSD\n          lastSalePrice\n          lastSaleToken\n          lastSaleQuantity\n          lastSaleTokenContract {\n            id\n            name\n            address\n            icon\n            decimal\n            symbol\n          }\n        }\n        bestBid {\n          bestBidPrice\n          bestBidToken\n          bestBidPriceBase\n          bestBidPriceUSD\n          bestBidPriceCNY\n          bestBidCreatedDate\n          bestBidOrderString\n          bestBidOrderQuantity\n          bestBidTokenContract {\n            id\n            name\n            address\n            icon\n            decimal\n            symbol\n          }\n        }\n        bestAsk {\n          bestAskSaleKind\n          bestAskPrice\n          bestAskToken\n          bestAskPriceBase\n          bestAskPriceUSD\n          bestAskListingDate\n          bestAskExpirationDate\n          bestAskPriceCNY\n          bestAskCreatedDate\n          bestAskOrderString\n          bestAskOrderType\n          bestAskOrderQuantity\n          bestAskTokenContract {\n            id\n            name\n            address\n            icon\n            decimal\n            symbol\n          }\n        }\n      }\n      assetOwners(first: 1) {\n        edges {\n          cursor\n          node {\n            chain\n            chainId\n            owner\n            balance\n            account {\n              identity {\n                address\n                blockChain {\n                  chain\n                  chainId\n                }\n              }\n              user {\n                id\n                address\n                chain\n                chainId\n                profileImageUrl\n                userName\n              }\n              info {\n                profileImageUrl\n                userName\n              }\n            }\n          }\n        }\n      }\n      creator {\n        identity {\n          address\n          blockChain {\n            chain\n            chainId\n          }\n        }\n        user {\n          id\n          address\n          chain\n          chainId\n          profileImageUrl\n          userName\n        }\n        info {\n          profileImageUrl\n          userName\n        }\n      }\n      paymentTokens {\n        id\n        name\n        address\n        icon\n        symbol\n        chain\n        chainId\n        decimal\n      }\n      collection {\n        id\n        name\n        slug\n        description\n        bannerImageUrl\n        featuredImageUrl\n        externalUrl\n        weiboUrl\n        twitterUrl\n        instagramUrl\n        mediumUrl\n        telegramUrl\n        discordUrl\n        facebookUrl\n        paymentTokens {\n          id\n          name\n          icon\n          symbol\n          chain\n          chainId\n          decimal\n          address\n        }\n        isVerified\n        royalty\n      }\n      uri\n      isFavorite\n      favoriteQuantity\n    }\n  }\n"], ["\n  query assetsDetail($blockChain: BlockChainInput!, $contractAddress: Address!, $tokenId: String!) {\n    asset(identity: { blockChain: $blockChain, contractAddress: $contractAddress, tokenId: $tokenId }) {\n      id\n      chain\n      chainId\n      contractAddress\n      tokenId\n      tokenType\n      creatorAddress\n      collectionId\n      name\n      description\n      imageAttrs\n      animationAttrs\n      imageUrl\n      imagePreviewUrl\n      imageThumbnailUrl\n      animationUrl\n      externalUrls\n      unlockContentEnable\n      ownedQuantity\n      ownershipCount\n      quantity\n      properties {\n        key\n        value\n        traitCount\n        traitTotal\n        traitSupply\n      }\n      levels {\n        key\n        value\n        max\n      }\n      stats {\n        key\n        value\n        max\n      }\n      supply\n      tradeSummary {\n        lastSale {\n          lastSaleDate\n          lastSalePriceBase\n          lastSalePriceUSD\n          lastSalePrice\n          lastSaleToken\n          lastSaleQuantity\n          lastSaleTokenContract {\n            id\n            name\n            address\n            icon\n            decimal\n            symbol\n          }\n        }\n        bestBid {\n          bestBidPrice\n          bestBidToken\n          bestBidPriceBase\n          bestBidPriceUSD\n          bestBidPriceCNY\n          bestBidCreatedDate\n          bestBidOrderString\n          bestBidOrderQuantity\n          bestBidTokenContract {\n            id\n            name\n            address\n            icon\n            decimal\n            symbol\n          }\n        }\n        bestAsk {\n          bestAskSaleKind\n          bestAskPrice\n          bestAskToken\n          bestAskPriceBase\n          bestAskPriceUSD\n          bestAskListingDate\n          bestAskExpirationDate\n          bestAskPriceCNY\n          bestAskCreatedDate\n          bestAskOrderString\n          bestAskOrderType\n          bestAskOrderQuantity\n          bestAskTokenContract {\n            id\n            name\n            address\n            icon\n            decimal\n            symbol\n          }\n        }\n      }\n      assetOwners(first: 1) {\n        edges {\n          cursor\n          node {\n            chain\n            chainId\n            owner\n            balance\n            account {\n              identity {\n                address\n                blockChain {\n                  chain\n                  chainId\n                }\n              }\n              user {\n                id\n                address\n                chain\n                chainId\n                profileImageUrl\n                userName\n              }\n              info {\n                profileImageUrl\n                userName\n              }\n            }\n          }\n        }\n      }\n      creator {\n        identity {\n          address\n          blockChain {\n            chain\n            chainId\n          }\n        }\n        user {\n          id\n          address\n          chain\n          chainId\n          profileImageUrl\n          userName\n        }\n        info {\n          profileImageUrl\n          userName\n        }\n      }\n      paymentTokens {\n        id\n        name\n        address\n        icon\n        symbol\n        chain\n        chainId\n        decimal\n      }\n      collection {\n        id\n        name\n        slug\n        description\n        bannerImageUrl\n        featuredImageUrl\n        externalUrl\n        weiboUrl\n        twitterUrl\n        instagramUrl\n        mediumUrl\n        telegramUrl\n        discordUrl\n        facebookUrl\n        paymentTokens {\n          id\n          name\n          icon\n          symbol\n          chain\n          chainId\n          decimal\n          address\n        }\n        isVerified\n        royalty\n      }\n      uri\n      isFavorite\n      favoriteQuantity\n    }\n  }\n"])));
exports.refreshMeta = graphql_request_1.gql(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  mutation refreshMeta($input: AssetIdentityInput!) {\n    assets {\n      refreshMeta(input: $input)\n    }\n  }\n"], ["\n  mutation refreshMeta($input: AssetIdentityInput!) {\n    assets {\n      refreshMeta(input: $input)\n    }\n  }\n"])));
var templateObject_1, templateObject_2, templateObject_3;
